name: Build Application

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 
      uses: actions/setup-python@v5
      with:
        python-version: '3.13.1'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --onedir --windowed --name=secan src/main.py --icon resources/secan_icon.icns

    - name: Create Windows Installer
      if: matrix.os == 'windows-latest'
      run: |
        powershell -ExecutionPolicy Bypass -File build/windows_installer.ps1

    - name: Create MacOS DMG
      if: matrix.os == 'macos-latest'
      run: |
        xcode-select --install
        brew install create-dmg
        bash build/macos_installer.sh
      
    - name: Upload Windows Installer
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-installer
        path: secan-installer.exe
    
    - name: Upload macOS DMG
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-installer
        path: secan-installer.dmg

    - name: Upload macOS App
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-app
        path: /

    - name: Upload Ubuntu Files
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: dist/